// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  user_id       Int      @id @default(autoincrement())
  firebase_uuid String   @unique
  username      String   @unique
  user_email    String   @unique
  itineraries   itineraries[]
  likes         likes[]
  bookmarks     bookmarks[]
  comments      comments[]
}

model itineraries {
  itinerary_id    Int               @id @default(autoincrement())
  firebase_uuid   String
  itinerary_name  String           @unique
  itinerary_descr String
  itinerary_tags  String[]
  user            users?            @relation(fields: [firebase_uuid], references: [firebase_uuid])
  itinerary_locations itinerary_location[]
  likes           likes[]
  bookmarks       bookmarks[]
  comments        comments[]
}

model locations {
  loc_id          Int               @id @default(autoincrement())
  loc_name        String
  loc_coords      Float[]
  loc_descr_en    String
  loc_tags     String[]
  itinerary_locations itinerary_location[]
}

model itinerary_location {
  id              Int               @id @default(autoincrement())
  itinerary_id    Int
  location_id     Int
  itinerary       itineraries       @relation(fields: [itinerary_id], references: [itinerary_id])
  location        locations        @relation(fields: [location_id], references: [loc_id])
}

model likes {
  id              Int               @id @default(autoincrement())
  firebase_uuid   String
  itinerary_id    Int
  value           Int
  type            String
  createdAt       DateTime          @default(now())
  user            users             @relation(fields: [firebase_uuid], references: [firebase_uuid])
  itinerary       itineraries       @relation(fields: [itinerary_id], references: [itinerary_id])

  @@unique([firebase_uuid, itinerary_id])
}

model bookmarks {
  id            Int         @id @default(autoincrement())
  firebase_uuid String
  itinerary_id  Int
  createdAt     DateTime    @default(now())
  user          users       @relation(fields: [firebase_uuid], references: [firebase_uuid])
  itinerary     itineraries @relation(fields: [itinerary_id], references: [itinerary_id])

  @@unique([firebase_uuid, itinerary_id])
}

model comments {
  id            Int         @id @default(autoincrement())
  firebase_uuid String
  itinerary_id  Int
  comment       String
  createdAt     DateTime    @default(now())
  user          users       @relation(fields: [firebase_uuid], references: [firebase_uuid])
  itinerary     itineraries @relation(fields: [itinerary_id], references: [itinerary_id])
}